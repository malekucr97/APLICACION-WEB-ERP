{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { administrator, AuthStatesApp, httpLandingIndexPage } from '@environments/environment-access-admin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \"El nombre de usuario es requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.username.errors.required);\n  }\n}\n\nfunction LoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \"La contrase\\u00F1a es requerida\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, LoginComponent_div_15_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\n\nfunction LoginComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.alertService.clear();\n      this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n      this.UrlHome = this.route.snapshot.queryParams.returnUrl || '/';\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true;\n      this.loading = true;\n      if (this.form.invalid) return;\n      let userName = this.f.username.value;\n      let password = this.f.password.value;\n      this.accountService.login(userName, password).pipe(first()).subscribe(responseObjectLogin => {\n        if (responseObjectLogin) {\n          if (AuthStatesApp.inactive === responseObjectLogin.estado) {\n            this.router.navigate([httpLandingIndexPage.indexHTTPInactiveUser]);\n            return;\n          }\n\n          if (AuthStatesApp.pending === responseObjectLogin.estado) {\n            this.router.navigate([httpLandingIndexPage.indexHTTPPendingUser]);\n            return;\n          }\n\n          if (!responseObjectLogin.idRol) {\n            this.router.navigate([httpLandingIndexPage.indexHTTPNotRolUser]);\n            return;\n          }\n\n          responseObjectLogin.esAdmin = false;\n          this.accountService.getRoleById(responseObjectLogin.idRol).pipe(first()).subscribe(responseObjectRol => {\n            if (responseObjectRol.estado === AuthStatesApp.inactive) {\n              this.router.navigate([httpLandingIndexPage.indexHTTPInactiveRolUser]);\n              return;\n            } // si el usuario que inicia sesión es administrador\n\n\n            if (administrator.id === responseObjectRol.id) {\n              responseObjectLogin.esAdmin = true;\n            }\n\n            this.loading = false;\n            this.submitted = false;\n            let user = responseObjectLogin;\n            this.accountService.loadUserAsObservable(user);\n            this.router.navigate([this.UrlHome]);\n          });\n        }\n      }, error => {\n        this.alertService.error('Problemas al obtener respuesta del Servidor. Por favor contacte al administrador.');\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 28,\n    vars: 11,\n    consts: [[1, \"card\", 2, \"width\", \"500px\", \"height\", \"450px\", \"position\", \"absolute\", \"left\", \"50%\", \"top\", \"40%\", \"transform\", \"translate(-50%, -35%)\"], [1, \"login100-form-title\", 2, \"height\", \"50px\", \"background-image\", \"url('./assets/images/inra/INRA-INITIAL.jpg')\"], [1, \"login100-form-title-1\"], [1, \"card-body\"], [1, \"login100-form\", \"validate-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"wrap-input100\", \"m-b-26\", \"form-group\", 2, \"margin-top\", \"2%\"], [1, \"lnr\", \"lnr-user\", \"label-input100\"], [\"type\", \"text\", \"formControlName\", \"username\", \"name\", \"username\", \"placeholder\", \"Nombre de usuario\", 1, \"input100\", 2, \"text-align\", \"center\", 3, \"ngClass\"], [1, \"focus-input100\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"wrap-input100\", \"m-b-19\", \"form-group\"], [1, \"lnr\", \"lnr-lock\", \"label-input100\"], [\"type\", \"password\", \"formControlName\", \"password\", \"name\", \"pass\", \"placeholder\", \"Contrase\\u00F1a\", 1, \"input100\", 2, \"text-align\", \"center\", 3, \"ngClass\"], [1, \"flex-sb-m\", \"w-full\", \"p-b-30\"], [1, \"contact100-form-checkbox\"], [\"id\", \"ckb1\", \"type\", \"checkbox\", \"name\", \"remember-me\", 1, \"input-checkbox100\"], [\"for\", \"ckb1\", 1, \"label-checkbox100\"], [\"href\", \"#\", 1, \"txt1\"], [1, \"form-group\"], [1, \"login100-form-btn\", 2, \"position\", \"fixed\", \"left\", \"50%\", \"top\", \"93%\", \"transform\", \"translate(-50%, -89%)\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [2, \"text-align\", \"center\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \" Banking APP INRA S.A \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"span\", 6)(8, \"input\", 7)(9, \"span\", 8);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12)(14, \"span\", 8);\n        i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13)(17, \"div\", 14);\n        i0.ɵɵelement(18, \"input\", 15);\n        i0.ɵɵelementStart(19, \"label\", 16);\n        i0.ɵɵtext(20, \" Recordarme \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"a\", 17);\n        i0.ɵɵtext(23, \" \\u00BFContrase\\u00F1a? \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 18)(25, \"button\", 19);\n        i0.ɵɵtemplate(26, LoginComponent_span_26_Template, 1, 0, \"span\", 20);\n        i0.ɵɵtext(27, \" Iniciar Sesi\\u00F3n \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.username.errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i4.NgIf],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}