{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport { ModuleRolBusiness, AssignRoleObject } from '@app/_models/';\nimport { CompaniaUsuario } from '@app/_models/modules/compania';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    // **************************************************************\n    // ************************* CONSTRUCTOR ************************\n    // **************************************************************\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n      this.user = this.userSubject.asObservable();\n      this.businessSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('Obusiness')));\n      this.businessObservable = this.businessSubject.asObservable();\n      this.moduleSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('Omodule')));\n      this.moduleObservable = this.moduleSubject.asObservable();\n    } // ******************************************************************************\n    // ****************************** MÉTODOS ACCESORES *****************************\n    // ******************************************************************************\n\n\n    get userListValue() {\n      if (this.listUsersSubject) {\n        return this.listUsersSubject.value;\n      }\n\n      return null;\n    }\n\n    get rolListValue() {\n      if (this.listRolesSubject) {\n        return this.listRolesSubject.value;\n      }\n\n      return null;\n    }\n\n    get businessListValue() {\n      if (this.listBusinessSubject) {\n        return this.listBusinessSubject.value;\n      }\n\n      return null;\n    }\n\n    get userValue() {\n      return this.userSubject.value;\n    }\n\n    get businessValue() {\n      return this.businessSubject.value;\n    }\n\n    get moduleValue() {\n      return this.moduleSubject.value;\n    } // ******************************************************************************\n    // *******************************************************************\n    // ********************** MÉTODOS SUBSCRIPTORES **********************\n    // *******************************************************************\n    // -- >> Suscribe lista de usuario para administración\n\n\n    suscribeListUser(listaUsuarios) {\n      this.listUsersSubject = new BehaviorSubject(listaUsuarios);\n    } // -- >> Actualiza lista de usuario administración\n\n\n    loadListUsers(listaUsuarios) {\n      this.listUsersSubject.next(listaUsuarios);\n    } // -- >> Suscribe lista de roles para administración\n\n\n    suscribeListRol(listaRoles) {\n      this.listRolesSubject = new BehaviorSubject(listaRoles);\n    } // -- >> Actualiza lista de roles administración\n\n\n    loadListRol(listaRoles) {\n      this.listRolesSubject.next(listaRoles);\n    } // -- >> Suscribe lista de roles para administración\n\n\n    suscribeListBusiness(listaRoles) {\n      this.listBusinessSubject = new BehaviorSubject(listaRoles);\n    } // -- >> Actualiza lista de roles administración\n\n\n    loadListBusiness(listaCompanias) {\n      this.listBusinessSubject.next(listaCompanias);\n    } // -- >> Actualiza Objeto Compañía en memoria y subcripción\n\n\n    loadBusinessAsObservable(bus) {\n      localStorage.removeItem('Obusiness');\n      localStorage.setItem('Obusiness', JSON.stringify(bus));\n      this.businessSubject.next(bus);\n    } // -- >> Actualiza Objeto Módulo en memoria y subcripción\n\n\n    loadModuleAsObservable(mod) {\n      localStorage.removeItem('Omodule');\n      localStorage.setItem('Omodule', JSON.stringify(mod));\n      this.moduleSubject.next(mod);\n    } // -- >> Actualiza Objeto uSUARIO en memoria y subcripción\n\n\n    loadUserAsObservable(user) {\n      localStorage.removeItem('user');\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n    } // *******************************************************************\n\n\n    validateAccessUser(idUser, idModule, nombrePantalla, idBusiness) {\n      return this.http.get(`${environment.apiUrl}/users/validaaccesopantalla?idUsuario=${idUser}\n                                                                                                &idModulo=${idModule}\n                                                                                                &nomPantalla=${nombrePantalla}\n                                                                                                &îdEmpresa=${idBusiness}`);\n    } // **********************************************************************************************\n    // -- >> Inicio de Sesión\n\n\n    login(username, password) {\n      return this.http.post(`${environment.apiUrl}/users/autenticar`, {\n        username,\n        password\n      }).pipe(map(user => {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n        return user;\n      }));\n    } // **********************************************************************************************\n    // -- >> Finaliza Sesión\n\n\n    logout() {\n      localStorage.removeItem('user');\n      this.userSubject.next(null);\n      localStorage.removeItem('Obusiness');\n      this.businessSubject.next(null);\n      localStorage.removeItem('Omodule');\n      this.moduleSubject.next(null);\n      this.router.navigate(['account/login']);\n    } // **********************************************************************************************\n    // -- >> Procedimientos Empresas\n\n\n    getAllBusiness() {\n      return this.http.get(`${environment.apiUrl}/users/listadoempresas`);\n    }\n\n    getBusinessActiveUser(idUsuario) {\n      return this.http.get(`${environment.apiUrl}/users/empresasusuarioactivas?idUsuario=${idUsuario}`);\n    }\n\n    getBusinessById(idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/empresaid?idEmpresa=${idEmpresa}`);\n    }\n\n    addBusiness(business) {\n      return this.http.post(`${environment.apiUrl}/users/registrarempresa`, business);\n    }\n\n    updateBusiness(business) {\n      return this.http.put(`${environment.apiUrl}/users/actualizarempresa`, business);\n    }\n\n    assignBusinessUser(idUser, idBusiness) {\n      let assignBusinessUObject = new CompaniaUsuario();\n      assignBusinessUObject.IdUsuario = idUser;\n      assignBusinessUObject.IdEmpresa = idBusiness;\n      return this.http.post(`${environment.apiUrl}/users/asignarsociedadusuario`, assignBusinessUObject);\n    }\n\n    dessAssignBusinessUser(idUser, idBusiness) {\n      const desAssignBusinessUObject = new CompaniaUsuario();\n      desAssignBusinessUObject.IdUsuario = idUser;\n      desAssignBusinessUObject.IdEmpresa = idBusiness;\n      return this.http.post(`${environment.apiUrl}/users/desasignsociedadusuario`, desAssignBusinessUObject);\n    }\n\n    dessAssignAllBusinessUser(idUser) {\n      let desAssignUserBusiness = new CompaniaUsuario();\n      desAssignUserBusiness.IdUsuario = idUser;\n      return this.http.post(`${environment.apiUrl}/users/desasignallsociedu`, desAssignUserBusiness);\n    } // -- >> Procedientos Modulos\n\n\n    getModulesSystem() {\n      return this.http.get(`${environment.apiUrl}/users/modulossistema`);\n    }\n\n    getModulesByRolAndBusiness(idRol, idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/modulosrolempresa?idEmpresa=${idEmpresa}&idRol=${idRol}`);\n    }\n\n    deleteAccessModuleToRol(idRol, idModulo, idEmpresa) {\n      return this.http.delete(`${environment.apiUrl}/users/eliminaraccesomodulo?idRol=${idRol}&idModulo=${idModulo}&idEmpresa=${idEmpresa}`);\n    }\n\n    grantAccessModuleToRol(idRol, idModulo, idBusiness) {\n      let accessMod = new ModuleRolBusiness();\n      accessMod.IdRol = idRol;\n      accessMod.IdModulo = idModulo;\n      accessMod.IdBusiness = idBusiness;\n      return this.http.post(`${environment.apiUrl}/users/otorgaraccesoamodulo`, accessMod);\n    }\n\n    getModulesBusiness(idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/modulossociedad?idEmpresa=${idEmpresa}`);\n    }\n\n    activateModule(idModule, idBusiness) {\n      let activateMod = new ModuleRolBusiness();\n      activateMod.IdModulo = idModule;\n      activateMod.IdBusiness = idBusiness;\n      return this.http.put(`${environment.apiUrl}/users/activarmodulo`, activateMod);\n    }\n\n    inActivateModule(idModule, idBusiness) {\n      let inActivateMod = new ModuleRolBusiness();\n      inActivateMod.IdModulo = idModule;\n      inActivateMod.IdBusiness = idBusiness;\n      return this.http.put(`${environment.apiUrl}/users/inactivarmodulo`, inActivateMod);\n    }\n\n    assignModuleToBusiness(idModule, idBusiness) {\n      let moduleToBusiness = new ModuleRolBusiness();\n      moduleToBusiness.IdModulo = idModule;\n      moduleToBusiness.IdBusiness = idBusiness;\n      return this.http.post(`${environment.apiUrl}/users/asignarmodulosociedad`, moduleToBusiness);\n    }\n\n    desAssignModuleToBusiness(moduleId, idBusiness) {\n      return this.http.delete(`${environment.apiUrl}/users/desasigmodsociedad?idModulo=${moduleId}&idEmpresa=${idBusiness}`);\n    }\n\n    getModulesActiveBusiness(idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/modulosactsociedad?idEmpresa=${idEmpresa}`);\n    }\n\n    getModulesActiveUser(idEmpresa, idRol) {\n      return this.http.get(`${environment.apiUrl}/users/modulosactusuario?idEmpresa=${idEmpresa}&idRol=${idRol}`);\n    }\n\n    addModuleRol(module) {\n      return this.http.post(`${environment.apiUrl}/users/registrarmodulo`, module);\n    }\n\n    deleteModule(idModulo) {\n      return this.http.delete(`${environment.apiUrl}/users/eliminarmodulo?idModulo=${idModulo}`);\n    }\n\n    addUser(user) {\n      return this.http.post(`${environment.apiUrl}/users/registrarusuario`, user);\n    }\n\n    removeRoleUser(user) {\n      return this.http.put(`${environment.apiUrl}/users/removerrolusuario`, user);\n    }\n\n    updateUser(id, user) {\n      return this.http.put(`${environment.apiUrl}/users/actualizarusuario`, user).pipe(map(x => {\n        // actualiza la información del usuario local si es quien se está en la sesión\n        if (id === this.userValue.identificacion) {\n          this.userValue.email = user.email;\n          this.userValue.nombreCompleto = user.nombreCompleto;\n          this.userValue.numeroTelefono = user.numeroTelefono;\n          this.userValue.password = user.password;\n          localStorage.setItem('user', JSON.stringify(this.userValue));\n          this.userSubject.next(this.userValue);\n        }\n\n        return x;\n      }));\n    }\n\n    getAllUsers() {\n      return this.http.get(`${environment.apiUrl}/users/getallusers`);\n    }\n\n    getUser(usuarioid) {\n      return this.http.get(`${environment.apiUrl}/users/${usuarioid}`);\n    }\n\n    getUserByIdentification(identification) {\n      return this.http.get(`${environment.apiUrl}/users/usuarioidentification?identUsuario=${identification}`);\n    }\n\n    getUsersBusiness(idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/usuariosempresa?idEmpresa=${idEmpresa}`);\n    }\n\n    activateUser(user) {\n      return this.http.put(`${environment.apiUrl}/users/activarcuenta`, user);\n    }\n\n    inActivateUser(user) {\n      return this.http.put(`${environment.apiUrl}/users/inactivarcuenta`, user);\n    }\n\n    deleteUser(idUser) {\n      return this.http.delete(`${environment.apiUrl}/users/deleteuser?idUser=${idUser}`).pipe(map(x => {\n        // -- >> si se elimina el usuario de la sesión se cierra sesión\n        if (idUser === this.userValue.id) {\n          this.logout();\n        }\n\n        return x;\n      }));\n    } // -- >> Procedimientos de Roles\n\n\n    getRoleById(idRol) {\n      return this.http.get(`${environment.apiUrl}/users/roleid?idRol=${idRol}`);\n    }\n\n    getAllRoles() {\n      return this.http.get(`${environment.apiUrl}/users/getallroles`);\n    }\n\n    getRolesBusiness(idEmpresa) {\n      return this.http.get(`${environment.apiUrl}/users/rolesempresa?idEmpresa=${idEmpresa}`);\n    }\n\n    assignRoleUser(idRole, idUser) {\n      const assignRolObject = new AssignRoleObject();\n      assignRolObject.idRole = idRole;\n      assignRolObject.idUser = idUser;\n      return this.http.post(`${environment.apiUrl}/users/asignarrolusuario`, assignRolObject);\n    }\n\n    updateRol(rol) {\n      return this.http.put(`${environment.apiUrl}/users/actualizarrol`, rol);\n    }\n\n    registerRole(role) {\n      return this.http.post(`${environment.apiUrl}/users/registrarrol`, role);\n    }\n\n  }\n\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}