{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport { administrator, httpAccessAdminPage, httpLandingIndexPage } from '@environments/environment-access-admin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ListRoleComponent_tr_20_button_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Activar rol\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListRoleComponent_tr_20_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const rol_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.activateRole(rol_r2.id);\n    });\n    i0.ɵɵtemplate(1, ListRoleComponent_tr_20_button_8_span_1_Template, 1, 0, \"span\", 15);\n    i0.ɵɵtemplate(2, ListRoleComponent_tr_20_button_8_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isActivating);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Inactiv rol\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ListRoleComponent_tr_20_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const rol_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.inActivateRole(rol_r2.id);\n    });\n    i0.ɵɵtemplate(1, ListRoleComponent_tr_20_button_9_span_1_Template, 1, 0, \"span\", 15);\n    i0.ɵɵtemplate(2, ListRoleComponent_tr_20_button_9_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isInActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.isInActivating);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_10_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lectura\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListRoleComponent_tr_20_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const rol_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.lectura(rol_r2.id);\n    });\n    i0.ɵɵtemplate(1, ListRoleComponent_tr_20_button_10_span_1_Template, 1, 0, \"span\", 15);\n    i0.ɵɵtemplate(2, ListRoleComponent_tr_20_button_10_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isReading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isReading);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 16);\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Escritura\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListRoleComponent_tr_20_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ListRoleComponent_tr_20_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const rol_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.escritura(rol_r2.id);\n    });\n    i0.ɵɵtemplate(1, ListRoleComponent_tr_20_button_11_span_1_Template, 1, 0, \"span\", 15);\n    i0.ɵɵtemplate(2, ListRoleComponent_tr_20_button_11_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.isActivating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.isWriting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isWriting);\n  }\n}\n\nfunction ListRoleComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 9);\n    i0.ɵɵtemplate(8, ListRoleComponent_tr_20_button_8_Template, 3, 3, \"button\", 10);\n    i0.ɵɵtemplate(9, ListRoleComponent_tr_20_button_9_Template, 3, 3, \"button\", 11);\n    i0.ɵɵtemplate(10, ListRoleComponent_tr_20_button_10_Template, 3, 3, \"button\", 10);\n    i0.ɵɵtemplate(11, ListRoleComponent_tr_20_button_11_Template, 3, 3, \"button\", 12);\n    i0.ɵɵelementStart(12, \"a\", 13);\n    i0.ɵɵtext(13, \" M\\u00F3dulo \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const rol_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r2.descripcion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r2.estado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r2.tipo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", rol_r2.estado != \"Activo\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rol_r2.estado == \"Activo\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rol_r2.tipo != \"Lectura\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rol_r2.tipo == \"Lectura\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate2(\"routerLink\", \"\", ctx_r0.URLAddModuleRolPage, \"\", rol_r2.id, \"\");\n  }\n}\n\nfunction ListRoleComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 19);\n    i0.ɵɵelement(2, \"span\", 20);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ListRoleComponent = /*#__PURE__*/(() => {\n  class ListRoleComponent {\n    constructor(accountService, alertService, router) {\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.router = router;\n      this.listRoles = [];\n      this.isActivating = false;\n      this.isInActivating = false;\n      this.isWriting = false;\n      this.isReading = false;\n      this.URLAddModuleRolPage = httpAccessAdminPage.urlPageAddModuleRol;\n      this.URLAdministratorPage = httpAccessAdminPage.urlPageAdministrator;\n      this.Home = httpLandingIndexPage.homeHTTP;\n      this.Index = httpLandingIndexPage.indexHTTP;\n      this.userObservable = this.accountService.userValue;\n      this.businessObservable = this.accountService.businessValue;\n    }\n\n    ngOnInit() {\n      if (!this.businessObservable) {\n        this.router.navigate([this.Home]);\n        return;\n      }\n\n      if (!this.userObservable.esAdmin) {\n        this.router.navigate([this.Index]);\n        return;\n      }\n\n      this.accountService.getAllRoles().pipe(first()).subscribe(responseRoles => {\n        this.listRoles = responseRoles;\n        this.accountService.suscribeListRol(this.listRoles);\n      });\n    }\n\n    updateRol(rolUpdate, rolList, idRol, accion, actualizaDato) {\n      this.accountService.updateRol(rolUpdate).pipe(first()).subscribe(responseUpdate => {\n        if (responseUpdate.exito) {\n          this.listRoles[this.listRoles.findIndex(r => r.id == idRol)] = rolList;\n          this.alertService.success(responseUpdate.responseMesagge, {\n            keepAfterRouteChange: false\n          });\n        } else {\n          this.alertService.error(responseUpdate.responseMesagge, {\n            keepAfterRouteChange: false\n          });\n\n          switch (accion) {\n            case 'Estado':\n              {\n                rolList.estado = actualizaDato;\n                break;\n              }\n\n            case 'Tipo':\n              {\n                rolList.tipo = actualizaDato;\n                break;\n              }\n\n            default:\n              {\n                null;\n                break;\n              }\n          }\n\n          this.listRoles[this.listRoles.findIndex(r => r.id == idRol)] = rolList;\n        }\n\n        this.isActivating = false;\n        this.isInActivating = false;\n        this.isWriting = false;\n        this.isReading = false;\n      }, error => {\n        this.alertService.error(error, {\n          keepAfterRouteChange: false\n        });\n      });\n    }\n\n    activateRole(idRol) {\n      this.alertService.clear();\n\n      if (idRol !== administrator.id) {\n        let estado = 'Activo';\n        this.isActivating = true;\n        let rolList = this.listRoles.find(x => x.id === idRol);\n        rolList.estado = estado;\n        let rolUpdate = new Role();\n        rolUpdate.id = idRol;\n        rolUpdate.estado = estado;\n        this.updateRol(rolUpdate, rolList, idRol, 'Estado', 'Inactivo');\n      } else {\n        let message = 'No se puede modificar el estado de la cuenta administradora del sistema';\n        this.alertService.info(message, {\n          keepAfterRouteChange: false\n        });\n      }\n    }\n\n    inActivateRole(idRol) {\n      this.alertService.clear();\n\n      if (idRol !== administrator.id) {\n        let estado = 'Inactivo';\n        this.isInActivating = true;\n        let rolList = this.listRoles.find(x => x.id === idRol);\n        rolList.estado = estado;\n        let rolUpdate = new Role();\n        rolUpdate.id = idRol;\n        rolUpdate.estado = estado;\n        this.updateRol(rolUpdate, rolList, idRol, 'Estado', 'Activo');\n      } else {\n        let message = 'No se puede modificar el estado de la cuenta administradora del sistema';\n        this.alertService.info(message, {\n          keepAfterRouteChange: false\n        });\n      }\n    }\n\n    escritura(idRol) {\n      this.alertService.clear();\n\n      if (idRol !== administrator.id) {\n        let tipo = 'Escritura';\n        this.isWriting = true;\n        let rolList = this.listRoles.find(x => x.id === idRol);\n        rolList.tipo = tipo;\n        let rolUpdate = new Role();\n        rolUpdate.id = idRol;\n        rolUpdate.tipo = tipo;\n        this.updateRol(rolUpdate, rolList, idRol, 'Tipo', 'Lectura');\n      } else {\n        let message = 'No se puede cambiar el tipo de permisos de la cuenta administradora del sistema';\n        this.alertService.info(message, {\n          keepAfterRouteChange: false\n        });\n      }\n    }\n\n    lectura(idRol) {\n      this.alertService.clear();\n\n      if (idRol !== administrator.id) {\n        let tipo = 'Lectura';\n        this.isReading = true;\n        let rolList = this.listRoles.find(x => x.id === idRol);\n        rolList.tipo = tipo;\n        let rolUpdate = new Role();\n        rolUpdate.id = idRol;\n        rolUpdate.tipo = tipo;\n        this.updateRol(rolUpdate, rolList, idRol, 'Tipo', 'Escritura');\n      } else {\n        let message = 'No se puede cambiar el tipo de permisos de la cuenta administradora del sistema';\n        this.alertService.info(message, {\n          keepAfterRouteChange: false\n        });\n      }\n    }\n\n  }\n\n  ListRoleComponent.ɵfac = function ListRoleComponent_Factory(t) {\n    return new (t || ListRoleComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ListRoleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListRoleComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[1, \"btn\", \"btn-light\", \"mb-2\", 3, \"routerLink\"], [1, \"card\"], [1, \"card-body\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"25%\"], [2, \"width\", \"20%\"], [2, \"width\", \"30%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"white-space\", \"nowrap\"], [\"class\", \"btn btn-sm btn-light mr-1\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-sm btn-info mr-1\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-sm btn-outline-dark mr-1\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-outline-dark\", \"mr-1\", 3, \"routerLink\"], [1, \"btn\", \"btn-sm\", \"btn-light\", \"mr-1\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\"], [1, \"btn\", \"btn-sm\", \"btn-info\", \"mr-1\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-sm\", \"btn-outline-dark\", \"mr-1\", 3, \"disabled\", \"click\"], [\"colspan\", \"4\", 1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"]],\n    template: function ListRoleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Roles\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h4\");\n        i0.ɵɵtext(3, \"Lista de de roles registrados en el sistema\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"a\", 0);\n        i0.ɵɵtext(5, \"Volver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 2)(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\", 4);\n        i0.ɵɵtext(13, \"Descripci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\", 5);\n        i0.ɵɵtext(15, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\", 6);\n        i0.ɵɵtext(17, \"Tipo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"th\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, ListRoleComponent_tr_20_Template, 14, 9, \"tr\", 7);\n        i0.ɵɵtemplate(21, ListRoleComponent_tr_21_Template, 3, 0, \"tr\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"routerLink\", ctx.URLAdministratorPage);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listRoles);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.listRoles);\n      }\n    },\n    directives: [i2.RouterLinkWithHref, i3.NgForOf, i3.NgIf],\n    encapsulation: 2\n  });\n  return ListRoleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}