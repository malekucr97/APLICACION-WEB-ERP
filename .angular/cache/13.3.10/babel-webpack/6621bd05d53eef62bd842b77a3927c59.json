{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { User } from '@app/_models';\nimport { administrator, httpAccessAdminPage, httpLandingIndexPage } from '@environments/environment-access-admin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\n\nfunction AddRoleUserComponent_h4_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 3);\n    i0.ɵɵtext(1, \"Rol asignado: \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRoleUserComponent_h4_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 4)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.role.nombre);\n  }\n}\n\nfunction AddRoleUserComponent_h4_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 3)(1, \"b\");\n    i0.ɵɵtext(2, \"Rol de usuario no asignado\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AddRoleUserComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\n\nfunction AddRoleUserComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Eliminar asignaci\\u00F3n de rol\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRoleUserComponent_div_26_tr_17_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\n\nfunction AddRoleUserComponent_div_26_tr_17_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Asignar Rol\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRoleUserComponent_div_26_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 18)(10, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function AddRoleUserComponent_div_26_tr_17_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const rol_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.assignRoleUser(rol_r7.id);\n    });\n    i0.ɵɵtemplate(11, AddRoleUserComponent_div_26_tr_17_span_11_Template, 1, 0, \"span\", 8);\n    i0.ɵɵtemplate(12, AddRoleUserComponent_div_26_tr_17_span_12_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const rol_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r7.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r7.descripcion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rol_r7.estado);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.isAsignRole);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isAsignRole);\n  }\n}\n\nfunction AddRoleUserComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"h3\", 11);\n    i0.ɵɵtext(3, \"Seleccione el rol para asignarlo al usuario seleccionado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"table\", 12)(5, \"thead\")(6, \"tr\")(7, \"th\", 13);\n    i0.ɵɵtext(8, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 14);\n    i0.ɵɵtext(10, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 15);\n    i0.ɵɵtext(12, \"Descripci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 13);\n    i0.ɵɵtext(14, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"th\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"tbody\");\n    i0.ɵɵtemplate(17, AddRoleUserComponent_div_26_tr_17_Template, 13, 6, \"tr\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.listAllRoles);\n  }\n}\n\nexport let AddRoleUserComponent = /*#__PURE__*/(() => {\n  class AddRoleUserComponent {\n    constructor(route, accountService, alertService, router) {\n      this.route = route;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.router = router;\n      this.userToAssign = new User();\n      this.listAllRoles = [];\n      this.isRolAssign = false;\n      this.Index = httpLandingIndexPage.indexHTTP;\n      this.HTTPListUserPage = httpAccessAdminPage.urlPageListUsers;\n      this.userObservable = this.accountService.userValue;\n      this.listUserSubject = this.accountService.userListValue;\n    }\n\n    ngOnInit() {\n      this.alertService.clear();\n\n      if (!this.accountService.userListValue) {\n        this.router.navigate([this.HTTPListUserPage]);\n        return;\n      }\n\n      if (!this.userObservable.esAdmin) {\n        this.router.navigate([this.Index]);\n        return;\n      }\n\n      if (!this.route.snapshot.params.id) {\n        this.router.navigate([this.HTTPListUserPage]);\n        return;\n      }\n\n      let pUserId = this.route.snapshot.params.id;\n\n      if (pUserId !== administrator.id) {\n        this.userToAssign = this.listUserSubject.find(x => x.identificacion === pUserId);\n        this.accountService.loadListUsers(this.listUserSubject);\n        this.accountService.getAllRoles().pipe(first()).subscribe(responseListRole => {\n          this.listAllRoles = responseListRole; // elimina el rol administrador del listado que se muestra en pantalla\n\n          this.listAllRoles.splice(this.listAllRoles.findIndex(r => r.id == administrator.id), 1);\n\n          if (this.userToAssign.idRol) {\n            this.isRolAssign = true;\n            this.role = this.listAllRoles.find(x => x.id === this.userToAssign.idRol);\n          }\n        }, error => {\n          this.alertService.error(error);\n        });\n      } else {\n        let message = 'No es posible actualizar el rol del administrador.';\n        this.alertService.info(message, {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate([httpAccessAdminPage.urlPageListUsers], {\n          relativeTo: this.route\n        });\n      }\n    }\n\n    assignRoleUser(idRole) {\n      this.alertService.clear();\n      this.isAsignRole = true;\n      this.accountService.assignRoleUser(idRole, this.userToAssign.identificacion).pipe(first()).subscribe(response => {\n        if (response.exito) {\n          this.role = this.listAllRoles.find(x => x.id === idRole);\n          this.isRolAssign = true;\n          this.userToAssign.idRol = idRole;\n          this.listUserSubject[this.listUserSubject.findIndex(u => u.id == this.userToAssign.id)] = this.userToAssign;\n          this.accountService.loadListUsers(this.listUserSubject);\n          this.alertService.success(response.responseMesagge);\n        } else {\n          this.alertService.error(response.responseMesagge);\n        }\n\n        this.isAsignRole = false;\n      }, error => {\n        this.isAsignRole = false;\n        this.alertService.error(error);\n      });\n    }\n\n    desAsignAllRolesUser() {\n      this.isDesAsignRoles = true;\n      this.accountService.removeRoleUser(this.userToAssign).pipe(first()).subscribe(response => {\n        if (response.exito) {\n          this.role = null;\n          this.isRolAssign = false;\n          this.userToAssign.idRol = null;\n          this.listUserSubject[this.listUserSubject.findIndex(u => u.id == this.userToAssign.id)] = this.userToAssign;\n          this.accountService.loadListUsers(this.listUserSubject);\n          this.alertService.success(response.responseMesagge);\n        } else {\n          this.alertService.error(response.responseMesagge, {\n            keepAfterRouteChange: true\n          });\n        }\n\n        this.isDesAsignRoles = false;\n      }, error => {\n        console.log(error);\n        this.alertService.error(error);\n      });\n    }\n\n  }\n\n  AddRoleUserComponent.ɵfac = function AddRoleUserComponent_Factory(t) {\n    return new (t || AddRoleUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  AddRoleUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddRoleUserComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 27,\n    vars: 8,\n    consts: [[\"routerLink\", \"/_AdminModule/AdminListUserPage\", 1, \"btn\", \"btn-light\", \"mb-2\", \"mr-3\"], [1, \"card\"], [1, \"card-body\"], [2, \"display\", \"inline\"], [2, \"display\", \"inline\", \"color\", \"#1A5276\"], [\"style\", \"display: inline;\", 4, \"ngIf\"], [\"style\", \"display:inline; color:#1A5276\", 4, \"ngIf\"], [1, \"btn\", \"btn-outline-danger\", \"mb-2\", \"float-right\", 3, \"click\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\"], [2, \"color\", \"#1A5276\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"15%\"], [2, \"width\", \"25%\"], [2, \"width\", \"30%\"], [2, \"width\", \"20%\"], [4, \"ngFor\", \"ngForOf\"], [2, \"white-space\", \"nowrap\"], [1, \"btn\", \"btn-sm\", \"btn-outline-success\", \"mr-1\", 3, \"click\"]],\n    template: function AddRoleUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Asignaci\\u00F3n de Roles a Usuario del Sistema\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"a\", 0);\n        i0.ɵɵtext(4, \"Volver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"h3\", 3);\n        i0.ɵɵtext(9, \"Usuario: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h3\", 4)(11, \"b\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"h3\", 3);\n        i0.ɵɵtext(14, \" Nombre: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"h2\", 4)(16, \"b\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, AddRoleUserComponent_h4_18_Template, 2, 0, \"h4\", 5);\n        i0.ɵɵtemplate(19, AddRoleUserComponent_h4_19_Template, 3, 1, \"h4\", 6);\n        i0.ɵɵtemplate(20, AddRoleUserComponent_h4_20_Template, 3, 0, \"h4\", 5);\n        i0.ɵɵelementStart(21, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function AddRoleUserComponent_Template_button_click_21_listener() {\n          return ctx.desAsignAllRolesUser();\n        });\n        i0.ɵɵtemplate(22, AddRoleUserComponent_span_22_Template, 1, 0, \"span\", 8);\n        i0.ɵɵtemplate(23, AddRoleUserComponent_span_23_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"br\")(25, \"br\");\n        i0.ɵɵtemplate(26, AddRoleUserComponent_div_26_Template, 18, 1, \"div\", 9);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate(ctx.userToAssign.identificacion);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.userToAssign.nombreCompleto);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isRolAssign);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.role);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isRolAssign);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDesAsignRoles);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isDesAsignRoles);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.listAllRoles);\n      }\n    },\n    directives: [i1.RouterLinkWithHref, i3.NgIf, i3.NgForOf],\n    encapsulation: 2\n  });\n  return AddRoleUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}